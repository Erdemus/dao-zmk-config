/*
 * Copyright (c) 2021 Rafael Yumagulov
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>

// #include "42.h"
// #define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4  // left hand
// #define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4  // right hand
// #define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                      // thumbs

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&mt {
	flavor = "hold-preferred";
	tapping-term-ms = <200>;
	quick_tap_ms = <150>;
	require-prior-idle-ms = <125>;
};

/ {
    chosen {
        zmk,matrix_transform = &default_transform;
        // zmk,matrix_transform = &extra_keys_transform;
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_ENTER {
            bindings = <&kp ENTER>;
            key-positions = <22 23>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
  &lt RSE TAB       &kp Q  &kp W  &kp E           &kp R           &kp T          &kp Y          &kp U           &kp I          &kp O    &kp P     &lt RSE LBKT
  &mt LCTRL ESC     &kp A  &kp S  &kp D           &kp F           &kp G          &kp H          &kp J           &kp K          &kp L    &kp SEMI  &mt RCTRL SQT
  &mt LSHIFT GRAVE  &kp Z  &kp X  &kp C           &kp V           &kp B          &kp N          &kp M           &kp COMMA      &kp DOT  &kp FSLH  &mt RSHIFT RBKT
                                  &mt LALT ENTER  &mt LGUI MINUS  &lt LWR SPACE  &lt LWR SPACE  &mt RGUI UNDER  &mt RALT BSPC
            >;
        };

        lower_layer {
            bindings = <
  &lt ADJ TILDE  &kp N1     &kp N2    &kp N3    &kp N4    &kp N5       &kp N6            &kp N7     &kp N8     &kp N9            &kp N0     &lt ADJ PIPE
  &trans         &kp EXCL   &kp AT    &kp HASH  &kp DLLR  &kp PRCNT    &kp LEFT          &kp DOWN   &kp UP     &kp RIGHT         &kp EQUAL  &mt RCTRL BSLH
  &trans         &kp CARET  &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR     &kp LG(LS(LBKT))  &kp PG_DN  &kp PG_UP  &kp LG(LS(RBKT))  &kp PLUS   &trans
                                      &trans    &trans    &trans       &trans            &trans     &trans
            >;
        };

        raise_layer {
            bindings = <
  &trans  &kp C_BRI_DN     &kp C_BRI_UP  &kp C_RW         &kp C_PP     &kp C_FF         &none          &none    &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &trans
  &trans  &kp F1           &kp F2        &kp F3           &kp F4       &kp F5           &kp F6         &kp F7   &kp F8      &kp F9        &kp F10       &mt RCTRL K_APP
  &trans  &kp PAUSE_BREAK  &kp C_POWER   &kp LG(LS(TAB))  &kp LG(TAB)  &none            &kp F11        &kp F12  &none       &none         &mkp MB1      &mkp MB2
                                         &trans           &trans       &lt ADJ SPACE    &lt ADJ SPACE  &trans   &trans
            >;
        };

        adjust_layer {
            bindings = <
  &trans  &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &trans
  &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &trans
  &trans  &bt BT_CLR    &sys_reset    &bootloader   &none         &none           &none         &none         &bootloader   &sys_reset    &bt BT_CLR    &trans
                                      &trans        &trans        &trans          &trans        &trans        &trans
            >;
        };
    };
};

